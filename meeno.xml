<?xml version="1.0" encoding="UTF-8"?>
<project name="meeno" default="all">


    <property file="meeno.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
    <property name="skip.tests" value="true"/>
     -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/*.rbc/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.war"/>
        <include name="*.ear"/>
        <include name="*.apk"/>
        <include name="*.zip"/>
        <include name="*.swc"/>
        <include name="*.ane"/>
        <include name="*.egg"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <exclude name="**/?*.java"/>
        <exclude name="**/?*.form"/>
        <exclude name="**/?*.class"/>
        <exclude name="**/?*.groovy"/>
        <exclude name="**/?*.scala"/>
        <exclude name="**/?*.flex"/>
        <exclude name="**/?*.kt"/>
        <exclude name="**/?*.clj"/>
    </patternset>


    <!-- Project Libraries -->

    <path id="library.runtime.classpath">
        <fileset dir="${basedir}/lib">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>

    <path id="library.test-lib.classpath">
        <fileset dir="${basedir}/test-lib">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>

    <!-- Modules -->


    <!-- Module meeno -->

    <dirname property="module.meeno.basedir" file="${ant.file}"/>


    <property name="compiler.args.meeno" value="-encoding UTF-8 -source 1.7 ${compiler.args}"/>

    <property name="meeno.output.dir" value="${module.meeno.basedir}/out/production/meeno"/>
    <property name="meeno.testoutput.dir" value="${module.meeno.basedir}/out/test/meeno"/>

    <path id="meeno.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="meeno.module.production.classpath">
        <path refid="library.runtime.classpath"/>
        <path refid="library.test-lib.classpath"/>
    </path>

    <path id="meeno.runtime.production.module.classpath">
        <pathelement location="${meeno.output.dir}"/>
        <path refid="library.runtime.classpath"/>
        <path refid="library.test-lib.classpath"/>
    </path>

    <path id="meeno.module.classpath">
        <pathelement location="${meeno.output.dir}"/>
        <path refid="library.runtime.classpath"/>
        <path refid="library.test-lib.classpath"/>
    </path>

    <path id="meeno.runtime.module.classpath">
        <pathelement location="${meeno.testoutput.dir}"/>
        <pathelement location="${meeno.output.dir}"/>
        <path refid="library.runtime.classpath"/>
        <path refid="library.test-lib.classpath"/>
    </path>


    <patternset id="excluded.from.module.meeno">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.meeno">
        <patternset refid="excluded.from.module.meeno"/>
    </patternset>

    <path id="meeno.module.sourcepath">
        <dirset dir="${module.meeno.basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="meeno.module.test.sourcepath">
        <dirset dir="${module.meeno.basedir}">
            <include name="test"/>
        </dirset>
    </path>


    <target name="compile.module.meeno" depends="compile.module.meeno.production,compile.module.meeno.tests"
            description="Compile module meeno"/>

    <target name="compile.module.meeno.production" description="Compile module meeno; production classes">
        <mkdir dir="${meeno.output.dir}"/>
        <javac destdir="${meeno.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.meeno}"/>
            <bootclasspath refid="meeno.module.bootclasspath"/>
            <classpath refid="meeno.module.production.classpath"/>
            <src refid="meeno.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.meeno"/>
        </javac>

        <copy todir="${meeno.output.dir}">
            <fileset dir="${module.meeno.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.meeno.tests" depends="compile.module.meeno.production"
            description="compile module meeno; test classes" unless="skip.tests">
        <mkdir dir="${meeno.testoutput.dir}"/>
        <javac destdir="${meeno.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.meeno}"/>
            <bootclasspath refid="meeno.module.bootclasspath"/>
            <classpath refid="meeno.module.classpath"/>
            <src refid="meeno.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.meeno"/>
        </javac>

        <copy todir="${meeno.testoutput.dir}">
            <fileset dir="${module.meeno.basedir}/test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.meeno" description="cleanup module">
        <delete dir="${meeno.output.dir}"/>
        <delete dir="${meeno.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.meeno" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.meeno" description="build all modules"/>

    <target name="all" depends="build.modules" description="build all"/>
</project>